# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * http://flight-manual.atom.io/using-atom/sections/basic-customization/#customizing-keybindings
# * http://flight-manual.atom.io/behind-atom/sections/keymaps-in-depth/
#
# If you're having trouble with your keybindings not working, try the
# Keybinding Resolver: `Cmd+.` on macOS and `Ctrl+.` on other platforms. See the
# Debugging Guide for more information:
# * http://flight-manual.atom.io/hacking-atom/sections/debugging/#check-the-keybindings
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#configuring-with-cson

'atom-workspace atom-text-editor':
  'cmd-h': 'unset!'  
  'cmd-d': 'unset!'  
  'ctrl-o': 'unset!'  
  'ctrl-x ctrl-o': 'unset!'

# vim-mode-plus
'atom-text-editor[mini]':
  'j j': 'core:cancel'

'atom-text-editor.vim-mode-plus.insert-mode':
  'j j': 'vim-mode-plus:activate-normal-mode'

'atom-text-editor.vim-mode-plus:not(.insert-mode)':
  ']': 'bracket-matcher:go-to-matching-bracket'
  'p': 'clip-history:paste'
  'ctrl-d': 'unset!'
# 'cmd-y': 'clip-history:paste-newer'
# 'ctrl-Y': 'clip-history:paste-last'  
  'space space': 'vim-mode-plus:scroll-full-screen-down'
  'shift-space shift-space': 'vim-mode-plus:scroll-full-screen-up'
  
# next-tab, prev-tab
'body':
  'ctrl-d': 'unset!'
  'f12': 'pane:show-next-item'
  'f11': 'pane:show-previous-item'
  
# split window and ..
#'atom-workspace':
#  'ctrl-0': 'pane:close'  
#  'ctrl-o': 'pane:split-right'
#  'ctrl-x o': 'window:focus-next-pane'  
  
# clip-history (kill ring)
'atom-text-editor:not([mini])':
  'ctrl-y': 'clip-history:paste'
  'cmd-y': 'clip-history:paste-newer'
  'ctrl-Y': 'clip-history:paste-last'  
  
  
